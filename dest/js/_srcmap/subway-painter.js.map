{"version":3,"sources":["subway-painter.js"],"names":["subwayPainter","l","length","i","_l$i","l_xmlattr","p","loop","lb","j","uid","_p$j$p_xmlattr","p_xmlattr","x","y","st","ex","rc","isLb","dStr","$","svg","appendTo","attr","split","html","addSvgClass","lbx","css","lc","repeatStr","_l$i2","_p$j$p_xmlattr2","rx","path","ry","trim","image","width","height","href","baseVal","imgSrc","cx","cy","window","panZoom","svgPanZoom","zoomEnabled","controlIconsEnabled","fit","center"],"mappings":"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","file":"../subway-painter.js","sourcesContent":["//ex 换乘标志\r\n//rc 圆润拐弯\r\n//st 有效站点\r\n//iu 有效点?????\r\n// (function() {\r\n//     var script = document.createElement('script');\r\n//     script.src = \"http://cdn.bootcss.com/eruda/1.4.2/eruda.min.js\";\r\n//     document.body.appendChild(script);\r\n//     script.onload = function() { eruda.init() }\r\n// })();\r\nfunction subwayPainter(l) {\r\n    //地铁线路\r\n    for (var i = 0; i < l.length; i++) {\r\n        var { l_xmlattr, p } = l[i]\r\n        var { lb, loop, uid } = l_xmlattr\r\n        if (!uid) { //暂未开通\r\n            break;\r\n        }\r\n        var dStr = \"\"; //地铁线路点\r\n        var isLb = false; //是否圆润拐点\r\n        for (var j = 0; j < p.length; j++) {\r\n            var { x, y, lb, st, ex, rc } = p[j].p_xmlattr\r\n            if (isLb) {\r\n                isLb = false\r\n                dStr += x + \" \" + y + \" \"\r\n            } else {\r\n                if (rc) {\r\n                    isLb = true\r\n                    dStr += \"Q\" + x + \" \" + y + \" \"\r\n                } else {\r\n                    if (j == 0) {\r\n                        dStr += \"M\" + x + \" \" + y + \" \"\r\n                    } else {\r\n                        dStr += \"L\" + x + \" \" + y + \" \"\r\n                    }\r\n                    if (j == p.length - 1) {\r\n                        if (loop) {\r\n                            dStr += \"Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var { lb, lc, lbx, lby } = l_xmlattr\r\n        var path = $.svg('path').appendTo('#g-box')\r\n        path.attr({\r\n            d: $.trim(dStr),\r\n            lb: lb\r\n        }).css(\"stroke\", \"#\" + lc.split(\"x\")[1]);\r\n        var text = $.svg('text').appendTo('#g-box').html(lb).addSvgClass(\"subway-name\")\r\n        text.attr({\r\n            x: lbx - 10,\r\n            y: lby + 15,\r\n        }).css(\"fill\", \"#\" + lc.split(\"x\")[1]);\r\n    }\r\n\r\n    var repeatStr = \"\" //uid字符串判断重复点\r\n    for (var i = 0; i < l.length; i++) {\r\n        var { l_xmlattr, p } = l[i]\r\n        if (!l_xmlattr.uid) { //暂未开通\r\n            break;\r\n        }\r\n        for (var j = 0; j < p.length; j++) {\r\n            var { x, y, rx, ry, lb, ex, rc, st, uid } = p[j].p_xmlattr\r\n            if (st) {\r\n                if (ex) {\r\n                    if (!repeatStr.includes(uid)) {\r\n                        var image = $.svg('image').appendTo('#g-box')\r\n                        image.attr({\r\n                            width: \"20\",\r\n                            height: \"20\",\r\n                            x: x - 10,\r\n                            y: y - 10\r\n                        });\r\n                        image[0].href.baseVal = imgSrc;\r\n                    }\r\n                } else {\r\n                    var ellipse = $.svg('ellipse').appendTo('#g-box')\r\n                    ellipse.attr({\r\n                        cx: x,\r\n                        cy: y,\r\n                        rx: \"6.5\",\r\n                        ry: \"6.5\"\r\n                    }).css(\"stroke\", \"#\" + l_xmlattr.lc.split(\"x\")[1]);\r\n                }\r\n                if (!repeatStr.includes(uid)) {\r\n                    var text = $.svg('text').appendTo('#g-box').html(lb).addSvgClass(\"station-name\")\r\n                    text.attr({\r\n                        x: x + rx + 2,\r\n                        y: y + ry + 12,\r\n                    });\r\n                    repeatStr += uid\r\n                }\r\n            }\r\n        }\r\n    }\r\n    window.panZoom = svgPanZoom('#mobile-svg', {\r\n        zoomEnabled: true,\r\n        controlIconsEnabled: false,\r\n        fit: 1,\r\n        center: 1,\r\n        customEventsHandler: eventsHandler\r\n    });\r\n}\r\n\r\n/**\r\n * 遇见问题及解决\r\n * 1.stroke color -->加“#”\r\n * 2.svg image标签路径赋值 -->image[0].href.baseVal = ;\r\n * 3.pc微信内置浏览器不显示-->es6兼容\r\n * 4.中转站存在text内容及image相同重叠问题 -->repeatStr.includs(uid)\r\n * \r\n */"]}